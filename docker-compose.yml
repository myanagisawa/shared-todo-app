version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: shared-todo-db
    environment:
      POSTGRES_DB: shared_todo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - shared-todo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for sessions and caching
  redis:
    image: redis:7-alpine
    container_name: shared-todo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shared-todo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: shared-todo-backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@database:5432/shared_todo
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-jwt-secret-key-change-in-production
      ENCRYPTION_KEY: your-encryption-key-change-in-production
      CLIENT_URL: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./logs:/app/logs
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - shared-todo-network
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: shared-todo-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api/v1
      VITE_WS_URL: ws://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - shared-todo-network
    restart: unless-stopped

  # PgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: shared-todo-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@shared-todo.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database
    networks:
      - shared-todo-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  shared-todo-network:
    driver: bridge